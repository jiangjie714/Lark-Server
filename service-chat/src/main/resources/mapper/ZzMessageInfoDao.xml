<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.workhub.z.servicechat.dao.ZzMessageInfoDao">

    <resultMap type="com.workhub.z.servicechat.entity.message.ZzMessageInfo" id="ZzMessageInfoMap">
        <result property="msgId" column="MSG_ID" jdbcType="VARCHAR"/>
        <result property="sender" column="SENDER" jdbcType="VARCHAR"/>
        <result property="receiver" column="RECEIVER" jdbcType="VARCHAR"/>
        <result property="createtime" column="CREATETIME" jdbcType="TIMESTAMP"/>
        <result property="levels" column="LEVELS" jdbcType="VARCHAR"/>
        <result property="type" column="TYPE" jdbcType="VARCHAR"/>
        <result property="ip" column="IP" jdbcType="VARCHAR"/>
        <result property="fileType" column="file_type" jdbcType="VARCHAR"/>
        <result property="msg" column="msg" jdbcType="VARCHAR"/>
        <result property="fileId" column="file_id" jdbcType="VARCHAR"/>
        <result property="frontId" column="FRONT_ID" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ContactsMessage" type="com.workhub.z.servicechat.model.ContactsMessageDto">
        <result property="createtime" column="CREATETIME" jdbcType="TIMESTAMP"/>
        <result property="contactsId" column="CONTACTSID" jdbcType="VARCHAR"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="type" column="TYPE" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="rawMsgDto" type="com.workhub.z.servicechat.model.RawMessageDto">
        <result property="msgId" column="msg_id" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="senderid" column="senderid" jdbcType="VARCHAR"/>
        <result property="sendername" column="sendername" jdbcType="VARCHAR"/>
        <result property="senderavatar" column="senderavatar" jdbcType="VARCHAR"/>
        <result property="senderlevels" column="senderlevels" jdbcType="VARCHAR"/>
        <result property="senderpid" column="senderpid" jdbcType="VARCHAR"/>
        <result property="receiverid" column="receiverid" jdbcType="VARCHAR"/>
        <result property="receivername" column="receivername" jdbcType="VARCHAR"/>
        <result property="receiveravatar" column="receiveravatar" jdbcType="VARCHAR"/>
        <result property="receivermembernum" column="receivermembernum" jdbcType="VARCHAR"/>
        <result property="receiverlevels" column="receiverlevels" jdbcType="VARCHAR"/>
        <result property="receiverpid" column="receiverpid" jdbcType="VARCHAR"/>
        <result property="fileid" column="fileid" jdbcType="VARCHAR"/>
        <result property="fileext" column="fileext" jdbcType="VARCHAR"/>
        <result property="filesize" column="filesize" jdbcType="VARCHAR"/>
        <result property="levels" column="levels" jdbcType="VARCHAR"/>
        <result property="frontid" column="frontid" jdbcType="VARCHAR"/>
        <result property="filetype" column="filetype" jdbcType="VARCHAR"/>
        <result property="msg" column="msg" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" jdbcType="VARCHAR"/>
        <result property="contactsid" column="contactsid" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="exportMsgVo" type="com.workhub.z.servicechat.VO.ExportMsgVo">
        <result property="sender" column="sender" jdbcType="VARCHAR"/>
        <result property="receiver" column="receiver" jdbcType="VARCHAR"/>
        <result property="msgType" column="msg_type" jdbcType="VARCHAR"/>
        <result property="msgContent" column="msg_content" jdbcType="VARCHAR"/>
        <result property="sendTime" column="send_time" jdbcType="VARCHAR"/>
        <result property="levels" column="levels" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="messageHistoryVo" type="com.workhub.z.servicechat.VO.MessageHistoryVo">
        <result property="msgId" column="msg_id" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="senderId" column="senderid" jdbcType="VARCHAR"/>
        <result property="senderName" column="sendername" jdbcType="VARCHAR"/>
        <result property="senderAvatar" column="senderavatar" jdbcType="VARCHAR"/>
        <result property="senderLevels" column="senderlevels" jdbcType="VARCHAR"/>
        <result property="senderPid" column="senderpid" jdbcType="VARCHAR"/>
        <result property="receiverId" column="receiverid" jdbcType="VARCHAR"/>
        <result property="receiverName" column="receivername" jdbcType="VARCHAR"/>
        <result property="receiverAvatar" column="receiveravatar" jdbcType="VARCHAR"/>
        <result property="receiverMemberNum" column="receivermembernum" jdbcType="VARCHAR"/>
        <result property="receiverLevels" column="receiverlevels" jdbcType="VARCHAR"/>
        <result property="receiverPid" column="receiverpid" jdbcType="VARCHAR"/>
        <result property="fileId" column="fileid" jdbcType="VARCHAR"/>
        <result property="fileExt" column="fileext" jdbcType="VARCHAR"/>
        <result property="fileSize" column="filesize" jdbcType="VARCHAR"/>
        <result property="levels" column="levels" jdbcType="VARCHAR"/>
        <result property="frontId" column="frontid" jdbcType="VARCHAR"/>
        <result property="fileType" column="filetype" jdbcType="VARCHAR"/>
        <result property="msg" column="msg" jdbcType="VARCHAR"/>
        <result property="createTime" column="createtime" jdbcType="VARCHAR"/>
        <result property="contactsId" column="contactsid" jdbcType="VARCHAR"/>
    </resultMap>
    <!--新增所有列-->
    <insert id="insert">
        insert into WORKHUB_IWORK.ZZ_MESSAGE_INFO(MSG_ID,
        SENDER,
        RECEIVER,
        CREATETIME,
        LEVELS,
        TYPE,
        ISCROSS,
        IP,
        FILE_TYPE,
        MSG,
        FILE_ID,
        FRONT_ID,
        CONTENT
        )
        values (#{msgId},
        #{sender},
        #{receiver},
        sysdate,
        #{levels},
        #{type},
        #{iscross},
        #{ip},
        #{fileType},
        #{msg},
        #{fileId},
        #{frontId},
        #{content}
        )
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update WORKHUB_IWORK.ZZ_MESSAGE_INFO
        <set>
            <if test="sender != null and sender != ''">
                SENDER = #{sender},
            </if>
            <if test="receiver != null and receiver != ''">
                RECEIVER = #{receiver},
            </if>
            <if test="createtime != null">
                CREATETIME = #{createtime},
            </if>
            <if test="levels != null and levels != ''">
                LEVELS = #{levels},
            </if>
            <if test="content != null and content != ''">
                CONTENT = #{content},
            </if>
            <if test="type != null and type != ''">
                TYPE = #{type},
            </if>
            <if test="cancel != null and cancel != ''">
                CANCEL = #{cancel},
                CANCEL_TIME = sysdate,
            </if>
        </set>
        where MSG_ID = #{msgId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from WORKHUB_IWORK.ZZ_MESSAGE_INFO where MSG_ID = #{msgId}
    </delete>
    <!--通过主键查询-->
    <select id="queryById" resultMap="ZzMessageInfoMap">
        select
        MSG_ID,
        SENDER,
        RECEIVER,
        CREATETIME,
        LEVELS,
        TYPE,
        ISCROSS,
        IP,
        FILE_TYPE,
        MSG,
        FILE_ID,
        FRONT_ID
        from WORKHUB_IWORK.ZZ_MESSAGE_INFO where MSG_ID = #{msgId}
    </select>

    <!--根据当前登陆人获取最近联系人id-->
    <select id="queryContactsMessage2" resultMap="ContactsMessage">
        SELECT * FROM (
        SELECT * FROM (
        SELECT ROW_NUMBER() OVER(PARTITION BY contactsId ORDER BY createtime DESC) RN ,t.*
        FROM (
        select T.TYPE,t.content,t.createtime, (case
        when t.sender =#{userId} then
        t.receiver
        else
        t.sender
        end) as contactsId
        from zz_message_info t where (t.sender = #{userId} or t.receiver =  #{userId}) and t.type = 'USER' and (t.cancel  = '0' or t.cancel is null)
        UNION ALL

        select  T.TYPE,t.content,t.createtime,t.receiver as contactsId from ZZ_MESSAGE_INFO t LEFT JOIN ZZ_USER_GROUP UG ON UG.GROUP_ID=T.RECEIVER
        where t.type = 'GROUP'
        and  (t.cancel  = '0' or t.cancel is null)
        and nvl(t.createtime,to_date('1900-01-01','yyyy-mm-dd')) &gt;= nvl(ug.createtime,to_date('2099-01-01','yyyy-mm-dd'))
        AND UG.USER_ID =#{userId}
        ) t
        )
        ) VO where rn &lt; =100
        ORDER BY VO.createtime ASC
    </select>
    <!--根据最近联系人id和当前登录人获取最近100条消息-->

    <!--根据当前登陆人获取最近联系人id-->
    <select id="queryContactsMessage" resultMap="rawMsgDto">
        SELECT * FROM (
        SELECT * FROM (
        SELECT ROW_NUMBER() OVER(PARTITION BY contactsId ORDER BY createtime DESC) RN ,t.*
        FROM (
        select
           t.msg_id,
           T.TYPE,
           sender.id senderid,
           sender.name sendername,
           sender.avartar senderavatar,
           sender.levels senderlevels,
           sender.pid senderpid,
           receiver.id receiverid,
           receiver.name receivername,
           receiver.avartar receiveravatar,
           receiver.member_num receivermembernum,
           receiver.levels receiverlevels,
           receiver.group_owner receivergroupowner,
           receiver.pid receiverpid,
           f.file_id fileid,
           f.file_ext fileext,
           to_char(f.sizes) filesize,
           t.levels levels,
           t.front_id frontid,
           t.file_type filetype,
           t.msg msg,
           to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime,
            (case
            when t.sender =#{userId} then
            t.receiver
            else
            t.sender
            end) as contactsid
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
         where (t.sender = #{userId} or t.receiver =  #{userId})
         and t.type = 'USER'
         and  (t.cancel  = '0' or t.cancel is null)
         and t.sender = sender.id
         and t.receiver = receiver.id
         and t.file_id = f.file_id(+)
        UNION ALL
        select
           t.msg_id,
           T.TYPE,
           sender.id senderid,
           sender.name sendername,
           sender.avartar senderavatar,
           sender.levels senderlevels,
           sender.pid senderpid,
           receiver.id receiverid,
           receiver.name receivername,
           receiver.avartar receiveravatar,
           receiver.member_num receivermembernum,
           receiver.levels receiverlevels,
           receiver.group_owner receivergroupowner,
           receiver.pid receiverpid,
           f.file_id fileid,
           f.file_ext fileext,
           to_char(f.sizes) filesize,
           t.levels levels,
           t.front_id frontid,
           t.file_type filetype,
           t.msg msg,
           to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime,
           t.receiver as contactsid
        from zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f, ZZ_USER_GROUP UG
        where t.type = 'GROUP'
        and (t.cancel  = '0' or t.cancel is null)
        and UG.GROUP_ID=T.RECEIVER
        and nvl(t.createtime,to_date('1900-01-01','yyyy-mm-dd')) &gt;= nvl(ug.createtime,to_date('2099-01-01','yyyy-mm-dd'))
        AND UG.USER_ID =#{userId}
        and t.sender = sender.id
         and t.receiver = receiver.id
         and t.file_id = f.file_id(+)
        ) t
        )
        ) VO where rn &lt; =100
        ORDER BY VO.createtime ASC
    </select>
    <!--根据最近联系人id和当前登录人获取最近100条消息-->

    <select id="queryHistoryMessageForSinglePrivate2" resultType="java.lang.String">
        select content from (
            select content,createtime
              from zz_message_info
             where 1 = 1
               and receiver = #{userId}
               and sender = #{contactId}
               <if test = "query!=null and query != ''">
                   and
                   (
                   substr(content,
                   instr(content, ',"username":"', 1, 1) +
                   length(',"username":"'),
                   instr(content, '"}', 1, 1) -
                   instr(content, ',"username":"', 1, 1) -
                   length(',"username":"')) like '%'||#{query}||'%'
                       or
                       substr(content,
                       instr(content, ',"title":"', 1, 1) + length(',"title":"'),
                       instr(content, '","secretLevel":', 1, 1) -
                       instr(content, ',"title":"', 1, 1) - length(',"title":"'))
                        like '%'||#{query}||'%'
                   )
               </if>
               and type='USER'
               and (cancel  = '0' or cancel is null)
              union
              select content,createtime
              from zz_message_info
             where 1 = 1
               and receiver = #{contactId}
               and sender = #{userId}
                <if test = "query!=null and query != ''">
                    and
                    (
                    substr(content,
                    instr(content, ',"username":"', 1, 1) +
                    length(',"username":"'),
                    instr(content, '"}', 1, 1) -
                    instr(content, ',"username":"', 1, 1) -
                    length(',"username":"')) like '%'||#{query}||'%'
                    or
                    substr(content,
                    instr(content, ',"title":"', 1, 1) + length(',"title":"'),
                    instr(content, '","secretLevel":', 1, 1) -
                    instr(content, ',"title":"', 1, 1) - length(',"title":"'))
                    like '%'||#{query}||'%'
                    )
                </if>
               and type='USER'
               and (cancel  = '0' or cancel is null)
              ) a
         order by a.createtime desc
    </select>

    <select id="queryHistoryMessageForSinglePrivate" resultMap="rawMsgDto">
        select
        msg_id,
        TYPE,
        senderid,
        sendername,
        senderavatar,
        senderlevels,
        senderpid,
        receiverid,
        receivername,
        receiveravatar,
        receivermembernum,
        receiverlevels,
        receivergroupowner,
        receiverpid,
        fileid,
        fileext,
        filesize,
        levels,
        frontid,
        filetype,
        msg,
        to_char(createtime ,'yyyy-mm-dd hh24:mi:ss') createtime
        from (
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        t.createtime
        from zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{userId}
        and t.sender = #{contactId}
        <if test = "query!=null and query != ''">
            and
            (
            sender.name like '%'||#{query}||'%'
            or
            t.msg like '%'||#{query}||'%'
            )
        </if>
        and t.type='USER'
        and (t.cancel  = '0' or t.cancel is null)
        union
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        t.createtime
        from zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        and t.sender = #{userId}
        <if test = "query!=null and query != ''">
            and
            (
            sender.name like '%'||#{query}||'%'
            or
            t.msg like '%'||#{query}||'%'
            )
        </if>
        and t.type='USER'
        and (t.cancel  = '0' or t.cancel is null)
        ) a
        order by a.createtime desc
    </select>

    <select id="queryHistoryMessageForSingleGroup2" resultType="java.lang.String">
        select content
        from zz_message_info mes
        where 1 = 1
        and receiver = #{contactId}
        <if test = "query!=null and query != ''">
            and
            (
            substr(content,
            instr(content, ',"username":"', 1, 1) +
            length(',"username":"'),
            instr(content, '"}', 1, 1) -
            instr(content, ',"username":"', 1, 1) -
            length(',"username":"')) like '%'||#{query}||'%'
            or
            substr(content,
            instr(content, ',"title":"', 1, 1) + length(',"title":"'),
            instr(content, '","secretLevel":', 1, 1) -
            instr(content, ',"title":"', 1, 1) - length(',"title":"'))
            like '%'||#{query}||'%'
            )
        </if>
        and type = 'GROUP'
        and (cancel  = '0' or cancel is null)
        and exists (select 1
                    from zz_user_group c
                    where 1 = 1
                    and c.user_id = #{userId}
                    and c.group_id = #{contactId}
                    and c.createtime &lt;= mes.createtime
                    )
        order by mes.createtime desc
    </select>

    <select id="queryHistoryMessageForSingleGroup" resultMap="rawMsgDto">
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        <if test = "query!=null and query != ''">
            and
            (
            sender.name like '%'||#{query}||'%'
            or
            t.msg like '%'||#{query}||'%'
            )
        </if>
        and t.type = 'GROUP'
        and (t.cancel  = '0' or t.cancel is null)
        and exists (select 1
        from zz_user_group c
        where 1 = 1
        and c.user_id = #{userId}
        and c.group_id = #{contactId}
        and c.createtime &lt;= t.createtime
        )
        order by t.createtime desc
    </select>

    <select id="queryHistoryMessageForSingleMeet2" resultType="java.lang.String">
        select content
        from zz_message_info mes
        where 1 = 1
        and receiver = #{contactId}
        <if test = "query!=null and query != ''">
            and
            (
            substr(content,
            instr(content, ',"username":"', 1, 1) +
            length(',"username":"'),
            instr(content, '"}', 1, 1) -
            instr(content, ',"username":"', 1, 1) -
            length(',"username":"')) like '%'||#{query}||'%'
            or
            substr(content,
            instr(content, ',"title":"', 1, 1) + length(',"title":"'),
            instr(content, '","secretLevel":', 1, 1) -
            instr(content, ',"title":"', 1, 1) - length(',"title":"'))
            like '%'||#{query}||'%'
            )
        </if>
        and type = 'MEET'
        and (cancel  = '0' or cancel is null)
        and exists (select 1
        from zz_meeting_user c
        where 1 = 1
        and c.user_id = #{userId}
        and c.meeting_id = #{contactId}
        and c.crt_time &lt;= mes.createtime
        )
        order by mes.createtime desc
    </select>

    <select id="queryHistoryMessageForSingleMeet"  resultMap="rawMsgDto">
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        <if test = "query!=null and query != ''">
            and
            (
            sender.name like '%'||#{query}||'%'
            or
            t.msg like '%'||#{query}||'%'
            )
        </if>
        and t.type = 'MEET'
        and (t.cancel  = '0' or t.cancel is null)
        and exists (select 1
        from zz_meeting_user c
        where 1 = 1
        and c.user_id = #{userId}
        and c.meeting_id = #{contactId}
        and c.crt_time &lt;= t.createtime
        )
        order by t.createtime desc
    </select>

    <!--查询会议或者群消息列表-->
    <select id="queryMessageList2" resultMap="ContactsMessage">
        select  t.type,t.content,t.createtime,
        t.receiver as contactsId from ZZ_MESSAGE_INFO t
        <!-- 私聊 -->
        <if test="type == 'USER'">

        </if>
        <!-- 群 -->
        <if test="type == 'GROUP'">
            ,ZZ_GROUP g
        </if>
        <!-- 会议 -->
        <if test="type == 'MEET'">
            ,ZZ_MEETING g
        </if>
        where t.type = #{type}
        and (t.cancel  = '0' or t.cancel is null)
        <!-- 私聊 -->
        <if test="type == 'USER'">
            and ((t.receiver = #{receiver} and t.sender = #{userId})
                  or
                 (t.sender = #{receiver} and t.receiver = #{userId})
                 )
        </if>
        <!-- 群 -->
        <if test="type == 'GROUP'">
            and t.receiver = g.group_id
            and t.receiver = #{receiver}
            and exists ( select 1 from  ZZ_USER_GROUP u where u.user_id  = #{userId} and u.group_id = #{receiver} and u.createtime &lt;= t.createtime)
        </if>
        <!-- 会议 -->
        <if test="type == 'MEET'">
            and t.receiver = g.id
            and t.receiver = #{receiver}
            and exists ( select 1 from  ZZ_MEETING_USER u where u.user_id  = #{userId} and u.meeting_id = #{receiver} and u.crt_time &lt;= t.createtime)
        </if>
        ORDER BY t.createtime ASC
    </select>
    <!--查询会议或者群消息列表-->
    <select id="queryMessageList" resultMap="rawMsgDto">
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime,
        t.receiver as contactsId
        from ZZ_MESSAGE_INFO t,
        zz_contact_inf sender,
        zz_contact_inf receiver,
        zz_group_file f
        <!-- 私聊 -->
        <if test="type == 'USER'">

        </if>
        <!-- 群 -->
        <if test="type == 'GROUP'">
            ,ZZ_GROUP g
        </if>
        <!-- 会议 -->
        <if test="type == 'MEET'">
            ,ZZ_MEETING g
        </if>
        where t.type = #{type}
        and (t.cancel  = '0' or t.cancel is null)
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        <!-- 私聊 -->
        <if test="type == 'USER'">
            and ((t.receiver = #{receiver} and t.sender = #{userId})
            or
            (t.sender = #{receiver} and t.receiver = #{userId})
            )
        </if>
        <!-- 群 -->
        <if test="type == 'GROUP'">
            and t.receiver = g.group_id
            and t.receiver = #{receiver}
            and exists ( select 1 from  ZZ_USER_GROUP u where u.user_id  = #{userId} and u.group_id = #{receiver} and u.createtime &lt;= t.createtime)
        </if>
        <!-- 会议 -->
        <if test="type == 'MEET'">
            and t.receiver = g.id
            and t.receiver = #{receiver}
            and exists ( select 1 from  ZZ_MEETING_USER u where u.user_id  = #{userId} and u.meeting_id = #{receiver} and u.crt_time &lt;= t.createtime)
        </if>
        ORDER BY t.createtime ASC
    </select>
    <select id="queryAllMessagePrivate2" resultType="java.util.Map">
        select msg_id id,content,to_char(createtime, 'yyyy-mm-dd HH24:MI:SS') sendtime ,ip, sender_sn
        from zz_message_info
        where 1 = 1
        and type = 'USER'
        and (cancel  = '0' or cancel is null)
        and content like '%"type":1,%'
        <if test="params.timeEnd != null and params.timeEnd != ''">
            and to_char(createtime, 'yyyy-mm-dd') &lt;= #{params.timeEnd}
        </if>
        <if test="params.timeBegin != null and params.timeBegin != ''">
            and to_char(createtime, 'yyyy-mm-dd') &gt;= #{params.timeBegin}
        </if>
        <if test="params.senderName != null and params.senderName != ''">
            and
                substr(content,
                instr(content, ',"username":"', 1, 1) +
                length(',"username":"'),
                instr(content, '"}', 1, 1) -
                instr(content, ',"username":"', 1, 1) -
                length(',"username":"'))
                like '%'|| #{params.senderName} || '%'
        </if>
        <if test="params.receiverName != null and params.receiverName != ''">
            and
                substr(content,
                instr(content, ',"toName":"', 1, 1) +
                length(',"toName":"'),
                instr(content, '","id":"', 1, 2) -
                instr(content, ',"toName":"', 1, 1) -
                length(',"toName":"'))
                like '%'||  #{params.receiverName} || '%'
        </if>
        <if test="params.messageLevel != null and params.messageLevel != ''">
            and levels =  #{params.messageLevel}
        </if>
        <if test="params.messageContent != null and params.messageContent != ''">
            and
                substr(content,
                instr(content, '","type":1,"title":"', 1, 1) +
                length('","type":1,"title":"'),
                instr(content, '","secretLevel":', 1, 1) -
                instr(content, '","type":1,"title":"', 1, 1) -
                length('","type":1,"title":"'))
                like '%'||  #{params.messageContent} || '%'
        </if>
        order by createtime desc
    </select>

    <select id="queryAllMessageMonitor"  resultMap="rawMsgDto">
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        to_char(t.createtime,'yyyy-mm-dd HH24:MI:SS') createtime,
        t.ip
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        <if test="params.teamType != null and params.teamType != ''">
            and t.type = #{params.teamType}
        </if>
        <if test="params.timeEnd != null and params.timeEnd != ''">
            and to_char(t.createtime, 'yyyy-mm-dd') &lt;= #{params.timeEnd}
        </if>
        <if test="params.timeBegin != null and params.timeBegin != ''">
            and to_char(t.createtime, 'yyyy-mm-dd') &gt;= #{params.timeBegin}
        </if>
        <if test="params.senderName != null and params.senderName != ''">
            and sender.name like '%'|| #{params.senderName} || '%'
        </if>
        <if test="params.receiverName != null and params.receiverName != ''">
            and receiver.name like '%'||  #{params.receiverName} || '%'
        </if>
        <if test="params.messageLevel != null and params.messageLevel != ''">
            and t.levels =  #{params.messageLevel}
        </if>
        <if test="params.messageContent != null and params.messageContent != ''">
            and t.msg like '%'||  #{params.messageContent} || '%'
        </if>
        order by t.createtime desc
    </select>

    <select id="queryAllMessageGroup2" resultType="java.util.Map">
        select msg_id  id,content,to_char(createtime, 'yyyy-mm-dd HH24:MI:SS') sendtime,ip, sender_sn
        from zz_message_info
        where 1 = 1
        and type = 'GROUP'
        and (cancel  = '0' or cancel is null)
        and content like '%"type":1,%'
        <if test="params.timeEnd != null and params.timeEnd != ''">
            and to_char(createtime, 'yyyy-mm-dd') &lt;= #{params.timeEnd}
        </if>
        <if test="params.timeBegin != null and params.timeBegin != ''">
            and to_char(createtime, 'yyyy-mm-dd') &gt;= #{params.timeBegin}
        </if>
        <if test="params.senderName != null and params.senderName != ''">
           and substr(content,
            instr(content, ',"username":"', 1, 1) +
            length(',"username":"'),
            instr(content, '"}', 1, 1) -
            instr(content, ',"username":"', 1, 1) -
            length(',"username":"'))
            like '%'|| #{params.senderName} || '%'
        </if>
        <if test="params.receiverName != null and params.receiverName != ''">
            and
                substr(content,
                instr(content, ',"toName":"', 1, 1) +
                length(',"toName":"'),
                instr(content, '","id":"', 1, 2) -
                instr(content, ',"toName":"', 1, 1) -
                length(',"toName":"'))
                like '%'||  #{params.receiverName} || '%'
        </if>
        <if test="params.messageLevel != null and params.messageLevel != ''">
            and levels =  #{params.messageLevel}
        </if>
        <if test="params.messageContent != null and params.messageContent != ''">
            and
                substr(content,
                instr(content, '","type":1,"title":"', 1, 1) +
                length('","type":1,"title":"'),
                instr(content, '","secretLevel":', 1, 1) -
                instr(content, '","type":1,"title":"', 1, 1) -
                length('","type":1,"title":"'))
                like '%'||  #{params.messageContent} || '%'
        </if>

        order by createtime desc
    </select>

    <select id="exportHistoryMessageForSinglePrivate" resultMap="exportMsgVo">
        select
        sendername sender,
        receivername receiver,
        decode(levels,'30','非密','40','密码','60','机密','未知') levels,
        decode(filetype,'2','图片','3','附件','1','文字','999','会议通知','未知') msg_type,
        msg msg_content,
        to_char(createtime, 'yyyy-mm-dd hh24:mi:ss') send_time
        from (
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        t.createtime
        from zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{userId}
        and t.sender = #{contactId}
        <if test = "beginDate!=null and beginDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &gt;= #{beginDate}
        </if>
        <if test = "endDate!=null and endDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &lt;= #{endDate}
        </if>
        and t.type='USER'
        and (t.cancel  = '0' or t.cancel is null)
        union
        select
        t.msg_id,
        T.TYPE,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        t.msg msg,
        t.createtime
        from zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        and t.sender = #{userId}
        <if test = "beginDate!=null and beginDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &gt;= #{beginDate}
        </if>
        <if test = "endDate!=null and endDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &lt;= #{endDate}
        </if>
        and t.type='USER'
        and (t.cancel  = '0' or t.cancel is null)
        ) a
        order by a.createtime asc
    </select>
    <select id="exportHistoryMessageForSingleGroup" resultMap="exportMsgVo">
        select
        sender.name sender,
        receiver.name receiver,
        decode(t.levels,'30','非密','40','密码','60','机密','未知') levels,
        decode(t.file_type,'2','图片','3','附件','1','文字','999','会议通知','未知') msg_type,
        t.msg msg_content,
        to_char(t.createtime, 'yyyy-mm-dd hh24:mi:ss') send_time
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        <if test = "beginDate!=null and beginDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &gt;= #{beginDate}
        </if>
        <if test = "endDate!=null and endDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &lt;= #{endDate}
        </if>
        and t.type = 'GROUP'
        and (t.cancel  = '0' or t.cancel is null)
        and exists (select 1
        from zz_user_group c
        where 1 = 1
        and c.user_id = #{userId}
        and c.group_id = #{contactId}
        and c.createtime &lt;= t.createtime
        )
        order by t.createtime asc
    </select>
    <select id="exportHistoryMessageForSingleMeet" resultMap="exportMsgVo">
        select
        sender.name sender,
        receiver.name receiver,
        decode(t.levels,'30','非密','40','密码','60','机密','未知') levels,
        decode(t.file_type,'2','图片','3','附件','1','文字','999','会议通知','未知') msg_type,
        t.msg msg_content,
        to_char(t.createtime, 'yyyy-mm-dd hh24:mi:ss') send_time
        from  zz_message_info t,zz_contact_inf sender,zz_contact_inf receiver,zz_group_file f
        where 1 = 1
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        and t.receiver = #{contactId}
        <if test = "beginDate!=null and beginDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &gt;= #{beginDate}
        </if>
        <if test = "endDate!=null and endDate != ''">
            and to_char(t.createtime,'yyyy-MM-dd') &lt;= #{endDate}
        </if>
        and t.type = 'MEET'
        and (t.cancel  = '0' or t.cancel is null)
        and exists (select 1
        from zz_meeting_user c
        where 1 = 1
        and c.user_id = #{userId}
        and c.meeting_id = #{contactId}
        and c.crt_time &lt;= t.createtime
        )
        order by t.createtime asc
    </select>
    <select id="listHistoryMsgGroup" resultType="java.lang.String">
        select content from (
        select content
        from zz_message_info mes
        where 1 = 1
        and receiver = #{contactId}
        and type = 'GROUP'
        and (cancel  = '0' or cancel is null)
        <if test="lastMsgId!=null and lastMsgId!=''">
            and mes.createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'GROUP')
        </if>
        and exists (select 1
        from zz_user_group c
        where 1 = 1
        and c.user_id = #{userId}
        and c.group_id = #{contactId}
        and c.createtime &lt;= mes.createtime
        )
        order by mes.createtime desc
        )
        where rownum &lt; = #{size}
    </select>
    <select id="listHistoryMsgPrivate" resultType="java.lang.String">
        select content from (
        select content from (
        select content,createtime
        from zz_message_info
        where 1 = 1
        and receiver = #{userId}
        and sender = #{contactId}
        and type='USER'
        and (cancel  = '0' or cancel is null)
        <if test="lastMsgId!=null and lastMsgId!=''">
            and createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'USER')
        </if>
        union
        select content,createtime
        from zz_message_info
        where 1 = 1
        and receiver = #{contactId}
        and sender = #{userId}
        and type='USER'
        and (cancel  = '0' or cancel is null)
        <if test="lastMsgId!=null and lastMsgId!=''">
            and createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'USER')
        </if>
        ) a
        order by a.createtime desc
        )
        where rownum &lt; = #{size}
    </select>
    <select id="listHistoryMsgMeet" resultType="java.lang.String">
        select content from (
        select content
        from zz_message_info mes
        where 1 = 1
        and receiver = #{contactId}
        and type = 'MEET'
        and (cancel  = '0' or cancel is null)
        <if test="lastMsgId!=null and lastMsgId!=''">
            and mes.createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'MEET')
        </if>
        and exists (select 1
        from zz_meeting_user c
        where 1 = 1
        and c.user_id = #{userId}
        and c.meeting_id = #{contactId}
        and c.crt_time &lt;= mes.createtime
        )
        order by mes.createtime desc
        )
        where rownum &lt; = #{size}
    </select>
    <select id="listHistoryMsgGroupInf" resultMap="messageHistoryVo">
        select *
            from (select t.msg_id,
            t.type,
            sender.id senderid,
            sender.name sendername,
            sender.avartar senderavatar,
            sender.levels senderlevels,
            sender.pid senderpid,
            receiver.id receiverid,
            receiver.name receivername,
            receiver.avartar receiveravatar,
            receiver.member_num receivermembernum,
            receiver.levels receiverlevels,
            receiver.group_owner receivergroupowner,
            receiver.pid receiverpid,
            f.file_id fileid,
            f.file_ext fileext,
            to_char(f.sizes) filesize,
            t.levels levels,
            t.front_id frontid,
            t.file_type filetype,
            decode(t.cancel,'1','消息已撤销',t.msg) msg,
            to_char(t.createtime, 'yyyy-mm-dd HH24:MI:SS') createtime,
            t.receiver as contactsid
            from zz_message_info t,
            zz_contact_inf  sender,
            zz_contact_inf  receiver,
            zz_group_file   f
            where t.type = 'GROUP'
            and (t.cancel  = '0' or t.cancel is null)
            and t.sender = sender.id
            and t.receiver = receiver.id
            and t.file_id = f.file_id(+)
           <if test="lastMsgId!=null and lastMsgId!=''">
               and t.createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'GROUP')
           </if>
            and t.receiver = #{contactId}
            and exists (select 1
                from zz_user_group c
                where 1 = 1
                and c.user_id = #{userId}
                and c.group_id = #{contactId}
                and c.createtime  &lt;= t.createtime)
            order by t.createtime desc)
        where rownum  &lt;= #{size}
    </select>
    <select id="listHistoryMsgPrivateInf" resultMap="messageHistoryVo">
         select *
          from (select t.msg_id,
                       t.type,
                       sender.id senderid,
                       sender.name sendername,
                       sender.avartar senderavatar,
                       sender.levels senderlevels,
                       sender.pid senderpid,
                       receiver.id receiverid,
                       receiver.name receivername,
                       receiver.avartar receiveravatar,
                       receiver.member_num receivermembernum,
                       receiver.levels receiverlevels,
                       receiver.group_owner receivergroupowner,
                       receiver.pid receiverpid,
                       f.file_id fileid,
                       f.file_ext fileext,
                       to_char(f.sizes) filesize,
                       t.levels levels,
                       t.front_id frontid,
                       t.file_type filetype,
                       decode(t.cancel,'1','消息已撤销',t.msg) msg,
                       to_char(t.createtime, 'yyyy-mm-dd HH24:MI:SS') createtime,
                       (case
                         when t.sender = #{userId} then
                          t.receiver
                         else
                          t.sender
                       end) as contactsid
                  from zz_message_info t,
                       zz_contact_inf  sender,
                       zz_contact_inf  receiver,
                       zz_group_file   f
                 where 1 = 1
                   and t.type = 'USER'
                   and (t.cancel  = '0' or t.cancel is null)
                   and t.sender = sender.id
                   and t.receiver = receiver.id
                   and t.file_id = f.file_id(+)
                   <if test="lastMsgId!=null and lastMsgId!=''">
                        and t.createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'USER')
                   </if>
                   and ((t.sender = #{userId} and t.receiver = #{contactId}) or
                       (t.sender = #{contactId} and t.receiver = #{userId}))
                 order by t.createtime desc)
         where rownum &lt; = #{size}
    </select>
    <select id="listHistoryMsgMeetInf" resultMap="messageHistoryVo">
        select *
        from (select t.msg_id,
        t.type,
        sender.id senderid,
        sender.name sendername,
        sender.avartar senderavatar,
        sender.levels senderlevels,
        sender.pid senderpid,
        receiver.id receiverid,
        receiver.name receivername,
        receiver.avartar receiveravatar,
        receiver.member_num receivermembernum,
        receiver.levels receiverlevels,
        receiver.group_owner receivergroupowner,
        receiver.pid receiverpid,
        f.file_id fileid,
        f.file_ext fileext,
        to_char(f.sizes) filesize,
        t.levels levels,
        t.front_id frontid,
        t.file_type filetype,
        decode(t.cancel,'1','消息已撤销',t.msg) msg,
        to_char(t.createtime, 'yyyy-mm-dd HH24:MI:SS') createtime,
        t.receiver as contactsid
        from zz_message_info t,
        zz_contact_inf  sender,
        zz_contact_inf  receiver,
        zz_group_file   f
        where t.type = 'MEET'
        and (t.cancel  = '0' or t.cancel is null)
        and t.sender = sender.id
        and t.receiver = receiver.id
        and t.file_id = f.file_id(+)
        <if test="lastMsgId!=null and lastMsgId!=''">
            and t.createtime &lt; (select mes2.createtime from zz_message_info mes2 where mes2.msg_id = #{lastMsgId} and mes2.type = 'MEET')
        </if>
        and t.receiver = #{contactId}
        and exists (select 1
        from zz_meeting_user c
        where 1 = 1
        and c.user_id = #{userId}
        and c.meeting_id = #{contactId}
        and c.crt_time &lt;= t.createtime
        )
        order by t.createtime desc)
        where rownum  &lt;= #{size}
    </select>
    <select id="getMsgCancelValidRes" resultType="string">
        select case
                 when (ROUND(TO_NUMBER(sysdate - createtime) * 24 * 60 * 60) -
                      (3 * 60) &gt; 0) then
                  '0'
                 else
                  '1'
               end
          from zz_message_info
         where msg_id = #{msgId}
    </select>
</mapper>